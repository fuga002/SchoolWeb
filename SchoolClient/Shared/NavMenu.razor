@using SchoolClient.Services
@using System.Security.Claims
@using SchoolClient.Pages
@using SchoolData.Models
@using SchoolData.StaticServices
@inject NavigationManager NavigationManager
@inject HttpService HttpService

@code{

    string? userRole;
    UserModel userModel = new UserModel();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var claims = await HttpService.GetClaims();
            var role = claims.FirstOrDefault(c => c.Type == ClaimTypes.Role)!.Value;
            userRole = await HttpService.GetUserRole();
            userModel = await HttpService.GetProfile();
            StateHasChanged();

        }
    }

}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link href="css/site.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css">
    <title>Document</title>
</head>
<body>

<button class="btn btn-primary" type="button" data-bs-toggle="offcanvas" data-bs-target="#staticBackdrop" aria-controls="staticBackdrop">
    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-list" viewBox="0 0 16 16">
        <path fill-rule="evenodd" d="M2.5 12a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5m0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5m0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5"/>
    </svg>
</button>
    
<div class="offcanvas offcanvas-start" data-bs-backdrop="static" tabindex="-1" id="staticBackdrop" aria-labelledby="staticBackdropLabel">
    <div class="offcanvas-header">
       
        <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
        <div>
            <div>
                <img class="image-part" src="user.png" alt="">
                <p>@userModel.Firstname  @userModel.Lastname</p>
            </div>
            @switch (userRole)
            {
                case StaticNames.StudentRole:
                {
                    <div class="button-container">
                        <button class="btn btn-primary" @onclick="() => Navigate(Home)">Home</button>
                        <br/>
                        <button class="btn btn-primary" @onclick="() => Navigate(Subjects)">Subjects</button>
                
                    </div>
                    break;
                }
                case StaticNames.TeacherRole:
                {
                    <div class="button-container">
                        <button class="btn btn-primary" @onclick="() => Navigate(Home)">Home</button>
                        <br/>
                        <button class="btn btn-primary" @onclick="() => Navigate(SubjectManager)">Subject Manager</button>
                    </div>
                    break;
                }
                case StaticNames.AdminRole:
                {
                    <div class="button-container">
                        <button class="btn btn-primary" @onclick="() => Navigate(Home)">Home</button>
                        <br/>
                        <button class="btn btn-primary" @onclick="() => Navigate(SubjectManager)">Subject Manager</button>
                        <br/>
                        <button class="btn btn-primary" @onclick="() => Navigate(Register)">Register Account</button>
                    </div>
                    break;
                }
                default:
                {
                            <div class="button-container">
                                <button class="btn btn-primary" @onclick="() => Navigate(Home)">Home</button>
                                <br />
                                <button class="btn btn-primary" @onclick="() => Navigate(Subjects)">Subjects</button>

                            </div>
                            break;
                }
            }
            

        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>

@code
{
    private const string Home = "";
    private const string SubjectManager = "subjectManager";
    private const string Subjects = "Subjects";
    private const string Register = "register";

    private void Navigate(string url)
    {
        NavigationManager.NavigateTo($"/{url}");
    }
}